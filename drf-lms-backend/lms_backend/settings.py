# 
"""
Django settings for lms_backend project.

Generated by 'django-admin startproject' using Django 5.2.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-qa+t6i7_!1l$64@ge2uk1uo-q!zcxv%7%fag8qum$z@gi@!1^o'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
	"users",
	"core",
	"rest_framework",  # https://www.django-rest-framework.org/
	"rest_framework.authtoken", # ^
	"rest_framework_simplejwt", # https://django-rest-framework-simplejwt.readthedocs.io/en/latest/getting_started.html
	"drf_yasg", # generates Swagger/OpenAPI 2.0 specifications
	'corsheaders',
]

MIDDLEWARE = [
	'corsheaders.middleware.CorsMiddleware', # ---
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'lms_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'lms_backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.2/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': BASE_DIR / 'db.sqlite3',
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.2/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.2/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# ------------------------------------------------------------------------------------------------------------

AUTH_USER_MODEL = 'users.User'

MEDIA_ROOT = BASE_DIR/'media'
MEDIA_URL = '/media/'

REST_FRAMEWORK = {
    'DEFAULT_AUTHENTICATION_CLASSES': (
		#"rest_framework.authentication.SessionAuthentication",  # Uses Django's session-based authentication.
        #"rest_framework.authentication.BasicAuthentication",  # Uses HTTP Basic Authentication, where the client sends a username and password encoded in the Authorization header.
        'rest_framework_simplejwt.authentication.JWTAuthentication',  # For APIs, also used in class 10
		#'rest_framework.authentication.TokenAuthentication',
    ),
	# "DEFAULT_PERMISSION_CLASSES": [
    #     "rest_framework.permissions.AllowAny",
    # ],
}

from datetime import timedelta

SIMPLE_JWT = {
    "ACCESS_TOKEN_LIFETIME": timedelta(minutes=90),  # ------------------------
    "REFRESH_TOKEN_LIFETIME": timedelta(days=7),
    "ROTATE_REFRESH_TOKENS": True,
    "BLACKLIST_AFTER_ROTATION": True,
}

SWAGGER_SETTINGS = {
    'SECURITY_DEFINITIONS': {
        'Bearer': {
            'type': 'apiKey',
            'in': 'header',
            'name': 'Authorization',
            'description': "Enter JWT token like: **Bearer &lt;your_token&gt;**"
        }
    },
    'USE_SESSION_AUTH': False,
}

# Only allow your React dev server origin(s)
CORS_ALLOWED_ORIGINS = [
    "http://localhost:3000",    # React Create‑React‑App default
    "http://127.0.0.1:3000",
    # If you're using Vite’s default port:
    "http://localhost:5173",
	"http://127.0.0.1:8000"  # add
]

# If you need to allow credentials (cookies, Authorization headers):
CORS_ALLOW_CREDENTIALS = True

# (Optional) To allow all origins during development:
CORS_ALLOW_ALL_ORIGINS = True






# for offline api testing: Hoppscotch, Bruno